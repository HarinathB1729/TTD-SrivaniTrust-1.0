# Generated by Django 5.0.3 on 2024-04-23 09:19

import datetime
import django.contrib.auth.models
import django.utils.timezone
import ttdusers.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='BhajanaMandiraluModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('district', models.CharField(default='null', max_length=255)),
                ('villagename', models.CharField(default='null', max_length=255)),
                ('longitude', models.CharField(default='null', max_length=255)),
                ('applicantname', models.CharField(default='null', max_length=255)),
                ('phoneno', models.BigIntegerField(default=0)),
                ('landtitlewith', models.CharField(default='null', max_length=255)),
                ('donorconsent', models.CharField(default='null', max_length=255)),
                ('othertemples', models.CharField(default='null', max_length=255)),
                ('amountbylocals', models.IntegerField(default=0)),
                ('contactpersonparticulars', models.CharField(default='null', max_length=255)),
                ('otherrelevantissues', models.CharField(default='null', max_length=255)),
                ('templehistory', models.CharField(default='null', max_length=255)),
                ('footfalloftemple', models.IntegerField(default=0)),
                ('proposalforconstruction', models.CharField(default='null', max_length=255)),
                ('assemblyname', models.CharField(default='null', max_length=255)),
                ('colonyname', models.CharField(default='null', max_length=255)),
                ('villagepopulation', models.BigIntegerField(default=0)),
                ('templename', models.CharField(default='null', max_length=255)),
                ('documents', models.CharField(default='null', max_length=255)),
                ('surveyno', models.CharField(default='null', max_length=255)),
                ('finsupportttd', models.CharField(default='null', max_length=255)),
                ('nearbytempledetails', models.CharField(default='null', max_length=255)),
                ('localscontribution', models.CharField(default='null', max_length=255)),
                ('contactpersonphoneno', models.BigIntegerField(default=0)),
                ('addlcomments', models.CharField(default='null', max_length=255)),
                ('templeage', models.CharField(default='null', max_length=255)),
                ('deityname', models.CharField(default='null', max_length=255)),
                ('proposedworkdetails', models.CharField(default='null', max_length=255)),
                ('mandal', models.CharField(default='null', max_length=255)),
                ('latitude', models.CharField(default='null', max_length=255)),
                ('locationbelongsscstfisherman', models.CharField(default='null', max_length=255)),
                ('email', models.EmailField(default='null', max_length=255)),
                ('landextent', models.CharField(default='null', max_length=255)),
                ('boundaries', models.CharField(default='null', max_length=255)),
                ('anyearliertemple', models.CharField(default='null', max_length=255)),
                ('villagedetails', models.CharField(default='null', max_length=255)),
                ('contactpersonemail', models.EmailField(default='null', max_length=255)),
                ('recommendationsinsoff', models.CharField(default='null', max_length=255)),
                ('annualincometemple', models.BigIntegerField(default=0)),
                ('categorytemple', models.CharField(default='null', max_length=255)),
                ('file', models.FileField(default=True, upload_to='uploads/', validators=[ttdusers.models.validate_file_extension])),
                ('startdate', models.DateField(default=datetime.date.today)),
            ],
        ),
        migrations.CreateModel(
            name='UserModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('password', models.CharField(default='null', max_length=255)),
                ('username', models.CharField(default='null', max_length=255, unique=True)),
                ('email', models.EmailField(default='null', max_length=255, unique=True)),
                ('phoneno', models.BigIntegerField(default=0)),
                ('role', models.CharField(default='user', max_length=10)),
                ('permission', models.CharField(default='Access', max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
